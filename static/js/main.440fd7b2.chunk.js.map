{"version":3,"sources":["modals/payment-modal.js","utils/tools.js","utils/static.js","components/searchable-dropdown.js","modals/manage-billers-modal.js","App.js","reportWebVitals.js","index.js"],"names":["PaymentModal","key","show","handle_close","handle_submit","is_submitting","handle_input_change","get_ben_name","values","useState","Object","assign","setTags","isAccoundFound","setAccFound","useEffect","getTags","then","value","length","a","resData","axios","get","data","console","log","beneficiaryName","Modal","onHide","backdrop","keyboard","Header","closeButton","Title","Body","Form","FloatingLabel","controlId","label","className","Control","type","min","onChange","placeholder","readOnly","Footer","Button","variant","onClick","Spinner","animation","role","isEmptyString","val","undefined","capitaliseFirstLetter","res","charAt","toUpperCase","slice","CustomToggle","React","forwardRef","ref","children","href","e","preventDefault","CustomMenu","style","labeledBy","Children","toArray","filter","child","props","toLowerCase","startsWith","SearchableDropdown","setValues","options","setOptions","loadOptions","target","concat","showDetails","Dropdown","Toggle","as","id","Menu","Array","isArray","map","opt","index","Item","eventKey","textAlign","tag","narration","ManageBillersModal","categories","setCategories","getCategories","Select","name","App","setShow","showBillerModal","setShowBillerModal","isSubmitting","setSubmitting","paymentDetails","setPaymentDetails","billerDetails","setBillerDetails","handleSubmit","nowNow","Date","requestData","transactionDate","toISOString","transactionId","getTime","post","alert","handleManageBillerSubmit","handleInputChange","getBeneficiaryName","accountName","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.440fd7b2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { FloatingLabel, Spinner } from \"react-bootstrap\";\r\nimport { getTagsUrl } from \"../utils/static\";\r\nimport axios from \"axios\";\r\n\r\nfunction PaymentModal({\r\n  show,\r\n  handle_close,\r\n  handle_submit,\r\n  is_submitting,\r\n  handle_input_change,\r\n  get_ben_name,\r\n  values\r\n}) {\r\n  const [tags, setTags] = useState(Object.assign([]));\r\n  const [isAccoundFound, setAccFound] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const res = getTags();\r\n    res.then((value) => {\r\n      if (value && value.length > 0) {\r\n        setTags(value);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const getTags = async () => {\r\n    let resData = {};\r\n    try {\r\n      const { data } = await axios.get(getTagsUrl, {});\r\n      return data;\r\n    } catch (err) {\r\n      console.log(\"ERROR OCURRED\");\r\n    }\r\n    return resData;\r\n  };\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setAccFound(true);\r\n  }, [values.beneficiaryName]);\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={show}\r\n        onHide={handle_close}\r\n        backdrop=\"static\"\r\n        keyboard={false}\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Make payment</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <>\r\n              <FloatingLabel controlId=\"amount\" label=\"Amount\" className=\"mb-3\">\r\n                <Form.Control\r\n                  type=\"number\"\r\n                  min={0}\r\n                  onChange={handle_input_change}\r\n                />\r\n              </FloatingLabel>\r\n              <FloatingLabel\r\n                controlId=\"narration\"\r\n                label=\"Narration\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"narration\"\r\n                  onChange={handle_input_change}\r\n                />\r\n              </FloatingLabel>\r\n              {/* <FloatingLabel controlId=\"tag\" label=\"Tag\" className=\"mb-3\">\r\n                <Form.Select\r\n                  aria-label=\"Floating label select example\"\r\n                  onChange={handle_input_change}\r\n                >\r\n                  {tags &&\r\n                    tags.map((val, index) => {\r\n                      return (\r\n                        <option key={index} value={val.name}>\r\n                          {val.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </Form.Select>\r\n              </FloatingLabel> */}\r\n              <FloatingLabel\r\n                controlId=\"beneficaryAccountNo\"\r\n                label=\"Beneficiary account number\"\r\n                className=\"mb-3\"\r\n              >\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"\"\r\n                  onChange={get_ben_name}\r\n                />\r\n              </FloatingLabel>\r\n              {isAccoundFound ? (\r\n                <FloatingLabel\r\n                  controlId=\"beneficiaryName\"\r\n                  label=\"Beneficiary account name\"\r\n                  className=\"mb-3\"\r\n                >\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    placeholder=\"\"\r\n                    readOnly={true}\r\n                    value={values.beneficiaryName ?? \"\"}\r\n                  />\r\n                </FloatingLabel>\r\n              ) : (\r\n                []\r\n              )}\r\n            </>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handle_close}>\r\n            Close\r\n          </Button>\r\n          {is_submitting ? (\r\n            <Spinner animation=\"border\" role=\"status\">\r\n              <span className=\"visually-hidden\">Loading...</span>\r\n            </Spinner>\r\n          ) : (\r\n            <Button\r\n              variant=\"primary\"\r\n              onClick={() => {\r\n                handle_submit(values);\r\n              }}\r\n            >\r\n              Pay\r\n            </Button>\r\n          )}\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default PaymentModal;\r\n","\r\nexport const isObject = (item) => {\r\n  return typeof item === \"object\" && !Array.isArray(item) && item !== null;\r\n};\r\n\r\nexport const skipObject = (arrOfVals, objVal) => {\r\n  let newObj = {};\r\n  if (arrOfVals.length === 0) {\r\n    for (const [keys, values] of Object.entries(objVal)) {\r\n      newObj = Object.assign({}, newObj, {\r\n        [keys]: values,\r\n      });\r\n    }\r\n    return newObj;\r\n  } else {\r\n    for (const [keys, values] of Object.entries(objVal)) {\r\n      if (!arrOfVals.includes(keys)) {\r\n        newObj = Object.assign({}, newObj, {\r\n          [keys]: values,\r\n        });\r\n      }\r\n    }\r\n    return newObj;\r\n  }\r\n};\r\n\r\nexport const cherryPickObject = (arrOfVals, objVal) => {\r\n  let newObj = {};\r\n  for (const [keys, values] of Object.entries(objVal)) {\r\n    if (arrOfVals.includes(keys)) {\r\n      newObj = Object.assign({}, newObj, {\r\n        [keys]: values,\r\n      });\r\n    }\r\n  }\r\n  return newObj;\r\n};\r\n\r\nexport const hasKeys = (objVal) => {\r\n  return !isNullOrUndefined(objVal) && Object.entries(objVal).length > 0;\r\n};\r\nexport const isKeyPresent = (objVal, requiredKey) => {\r\n  return !isNullOrUndefined(objVal) && objVal[requiredKey];\r\n};\r\n\r\nexport const createUUID = (prefix) => {\r\n  return (\r\n    prefix +\r\n    (new Date().getTime().toString(16) +\r\n      Math.floor(1e7 * Math.random()).toString(16))\r\n  );\r\n};\r\n\r\nexport const checkValueOrElseUseDefinedVal = (\r\n  val,\r\n  definedString\r\n) => {\r\n  return val !== null && val !== undefined ? val : definedString;\r\n};\r\n\r\nexport const isEmptyString = (val) => {\r\n  return val === null || val === undefined || val.length === 0;\r\n};\r\n\r\nexport const isANumber = (val) => {\r\n  return val !== null && val !== undefined && !Number.isNaN(val);\r\n};\r\n\r\nexport const valueIsLessThan = (val, operand) => {\r\n  return isANumber(val) && val < operand;\r\n};\r\n\r\nexport const valueIsGreaterThan = (val, operand) => {\r\n  return isANumber(val) && val > operand;\r\n};\r\n\r\nexport const isEmptyArray = (val) => {\r\n  return val === null || val === undefined || val.length === 0;\r\n};\r\n\r\nexport const isNullOrUndefined = (val) => {\r\n  return val === null || val === undefined;\r\n};\r\n\r\nexport const trueOrFalse = (val) => {\r\n  return checkValueOrElseUseDefinedVal(val, \"\") !== \"\" &&\r\n    val !== null &&\r\n    val?.toString().toLowerCase() === \"true\"\r\n    ? true\r\n    : val.toString().toLowerCase() === \"false\"\r\n    ? false\r\n    : val;\r\n};\r\n\r\nexport const isYesOrNo = (val) => {\r\n  return checkValueOrElseUseDefinedVal(val, \"\") !== \"\" &&\r\n    trueOrFalse(val) === false\r\n    ? \"No\"\r\n    : trueOrFalse(val) === true\r\n    ? \"Yes\"\r\n    : val;\r\n};\r\n\r\nexport const parseResponse = (val, fallbackRes) => {\r\n  if (checkValueOrElseUseDefinedVal(val, \"\") !== \"\") {\r\n    let resMessage = checkValueOrElseUseDefinedVal(\r\n      val?.actionResponse?.message,\r\n      fallbackRes\r\n    );\r\n\r\n    return resMessage;\r\n  } else {\r\n    return fallbackRes;\r\n  }\r\n};\r\n\r\nexport const isSuccessful = (val) => {\r\n  return (\r\n    (val !== null && val !== undefined && val === \"00\") ||\r\n    val === true ||\r\n    String(val).toLowerCase() === \"successful\"\r\n  );\r\n};\r\nexport const isDeclined = (val) => {\r\n  return (\r\n    (val !== null && val !== undefined && val === \"05\") ||\r\n    val === true ||\r\n    String(val).toLowerCase() === \"successful\"\r\n  );\r\n};\r\n\r\nexport const splitString = (val, regexp) => {\r\n  let res = \"\";\r\n  if (!isEmptyString(val)) {\r\n    res = val.split(regexp).join(\" \");\r\n  }\r\n  return res;\r\n};\r\nexport const splitObject = (val) => {\r\n  let res = \"\";\r\n  for (const [, value] of Object.entries(val)) {\r\n    res += String(value).concat(\"<br/>\");\r\n  }\r\n  return res;\r\n};\r\n\r\n\r\nexport const getSessionId = () => {\r\n  return /SESS\\w*ID=([^;]+)/i.test(document.cookie) ? RegExp.$1 : false;\r\n};\r\n\r\nexport const useGoBack = () => {};\r\n\r\nexport const wait = (ms) =>\r\n  new Promise((resolve) => setTimeout(resolve, ms));\r\n\r\nexport const grouper = (key) => (array) =>\r\n  array.reduce((objectsByKeyValue, obj) => {\r\n    const value = obj[key];\r\n    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\r\n    return objectsByKeyValue;\r\n  }, {});\r\n\r\nexport const groupByHelper = grouper(\"parentMenuName\");\r\nexport const stringStripper = ({\r\n  stringInContext,\r\n  replacer,\r\n  replacee,\r\n}) => {\r\n  let stringAfterReplacement = \"\";\r\n  try {\r\n    stringAfterReplacement = stringInContext.replaceAll(\r\n      replacee ?? \"\",\r\n      replacer === \"\" ? \"\" : replacer\r\n    );\r\n  } catch (error) {\r\n    stringAfterReplacement = stringInContext;\r\n  }\r\n  return stringAfterReplacement;\r\n};\r\n\r\nexport const generateRandomNumber = (max = 10) => {\r\n  return Math.floor(Math.random() * max) + 1;\r\n};\r\n\r\nexport const generateNumericString = (length) => {\r\n  let chars = \"0123456789\";\r\n  let randomNumericString = \"\";\r\n  for (let i = 0; i < length; i++) {\r\n    let rnum = Math.floor(Math.random() * chars.length);\r\n    randomNumericString += chars.substring(rnum, rnum + 1);\r\n  }\r\n  return randomNumericString;\r\n};\r\n\r\nexport const useTimer = (initTime) => {\r\n  var duration = initTime;\r\n\r\n  var start = Date.now(),\r\n    diff,\r\n    minutes,\r\n    seconds;\r\n\r\n  function timer() {\r\n    diff = duration - (((Date.now() - start) / 1000) | 0);\r\n\r\n    minutes = (diff / 60) | 0;\r\n    seconds = diff % 60 | 0;\r\n\r\n    minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n\r\n    seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n    if (diff <= 0) {\r\n      start = Date.now() + 1000;\r\n\r\n      clearInterval(myCountdown);\r\n    }\r\n  }\r\n\r\n  timer();\r\n\r\n  var myCountdown = setInterval(timer, 1000);\r\n  return { diff };\r\n};\r\n\r\nexport const buildDateRangeString = (data) => {\r\n  return data.startDate.concat(\r\n    \"/\",\r\n    data?.endDate,\r\n    \"/\",\r\n    data?.requestTypeId === \"APPROVED\" ? 1 : 0\r\n  );\r\n};\r\n\r\nexport const sanitizeUrl = (data) => {\r\n  return data.startsWith(\"/\") ? data.substr(1) : data;\r\n};\r\n\r\nexport const getToday = () => {\r\n  let myDate = new Date();\r\n  let year = String(myDate.getFullYear());\r\n  let month =\r\n    myDate.getMonth() < 10 ? \"0\" + myDate.getMonth() : myDate.getMonth();\r\n  let day = myDate.getDay() < 10 ? \"0\" + myDate.getDay() : myDate.getDay();\r\n\r\n  let finalDate = String(month + day + year);\r\n  return finalDate;\r\n};\r\n\r\nexport const stringSplitter = (splitBy, stringToSplit) => {\r\n  try {\r\n    let splittedString = stringToSplit.trim().split(splitBy);\r\n    let splittedStringArr = splittedString.join(\" \");\r\n\r\n    return splittedStringArr;\r\n  } catch (error) {\r\n    return stringToSplit;\r\n  }\r\n};\r\n\r\nexport const camelCaseToSentenceCase = (val) => {\r\n    let res = \"\";\r\n    try {\r\n      if (!isEmptyString(val)) {\r\n        res = val.replace(/([a-zA-Z])(?=[A-Z])/g, \"$1 \");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"ERROR OCCURRED WHILE PARSING:::\", error);\r\n    }\r\n  \r\n    return capitaliseFirstLetter(res);\r\n  };\r\n  \r\n  export const capitaliseFirstLetter = (val) => {\r\n    let res = val;\r\n    if (!isEmptyString(val)) {\r\n      res = val.length > 0 ? val.charAt(0).toUpperCase() + val.slice(1) : val;\r\n    }\r\n    return res;\r\n  };\r\n  \r\n  export const makeTitleCase = (stringInContext) => {\r\n    let titleSentence = stringInContext.toLowerCase().split(\" \");\r\n    for (let i = 0; i < titleSentence.length; i++) {\r\n      titleSentence[i] =\r\n        titleSentence[i][0].toUpperCase() + titleSentence[i].slice(1) + \" \";\r\n    }\r\n    return titleSentence;\r\n  };\r\n  \r\n  export const makeSentenceCase = (val) => {\r\n    let res = val;\r\n    if (!isEmptyString(val)) {\r\n      res = val.length > 0 ? val.charAt(0).toUpperCase() + val.slice(1) : val;\r\n    }\r\n    return res;\r\n  };","export const getTagsUrl =\"http://localhost:9100/vstore/tags\";\r\nexport const getCategoriesUrl =\"http://localhost:9100/vstore/categories\";\r\nexport const doCreateTnxUrl =\"http://localhost:9100/vstore/store\";\r\nexport const doCreateBillerUrl =\"http://localhost:9100/vstore/biller\";\r\nexport const searchValUrl =\"http://localhost:9100/vstore\";\r\nexport const nameEnqUrl =\"http://localhost:9100/vstore/name-enquiry?accountNo=\";","import React, { useState } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\nimport { FloatingLabel } from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\nimport { searchValUrl } from \"../utils/static\";\r\nimport { capitaliseFirstLetter } from \"../utils/tools\";\r\n\r\nconst CustomToggle = React.forwardRef(({ children, onClick }, ref) => (\r\n  <a\r\n    href=\"#\"\r\n    ref={ref}\r\n    onClick={(e) => {\r\n      e.preventDefault();\r\n      onClick(e);\r\n    }}\r\n  >\r\n    {children}\r\n  </a>\r\n));\r\nconst CustomMenu = React.forwardRef(\r\n  ({ children, style, className, \"aria-labelledby\": labeledBy }, ref) => {\r\n    const [value, setValue] = useState(\"\");\r\n\r\n    return (\r\n      <div\r\n        ref={ref}\r\n        style={style}\r\n        className={className}\r\n        aria-labelledby={labeledBy}\r\n      >\r\n        {/* <FormControl\r\n          autoFocus\r\n          className=\"mx-3 my-2 w-auto\"\r\n          placeholder=\"Type to filter...\"\r\n          onChange={(e) => setValue(e.target.value)}\r\n          value={value}\r\n        /> */}\r\n        <ul className=\"list-unstyled\">\r\n          {React.Children.toArray(children).filter(\r\n            (child) =>\r\n              !value || child.props.children.toLowerCase().startsWith(value)\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n);\r\nconst SearchableDropdown = () => {\r\n  const [values, setValues] = useState(\"\");\r\n  const [options, setOptions] = useState(Object.assign([]));\r\n\r\n  const loadOptions = async (e) => {\r\n    setValues(e.target.value);\r\n    let resData = [];\r\n    try {\r\n      const { data } = await axios.get(\r\n        searchValUrl.concat(\"?searchBy=\", e.target.value),\r\n        {}\r\n      );\r\n      setOptions(data);\r\n      return data;\r\n    } catch (err) {\r\n      console.log(\"ERROR OCURRED\");\r\n    }\r\n    return resData;\r\n  };\r\n\r\n  const showDetails = (e) => {\r\n      console.log(\"DATAT:::\", e);\r\n  };\r\n\r\n  return (\r\n    <Dropdown>\r\n      <Dropdown.Toggle as={CustomToggle} id=\"dropdown-custom-components\">\r\n        <FloatingLabel controlId=\"searchBy\" label=\"Search\" className=\"mb-3\">\r\n          <Form.Control type=\"text\" onChange={loadOptions} value={values} />\r\n        </FloatingLabel>\r\n      </Dropdown.Toggle>\r\n\r\n      <Dropdown.Menu as={CustomMenu} className=\"w-100\">\r\n        {options &&\r\n          Array.isArray(options) &&\r\n          options.map((opt, index) => {\r\n            return (\r\n              <Dropdown.Item\r\n                eventKey={index}\r\n                onClick={showDetails}\r\n                data={opt.data}\r\n              >\r\n                <div className=\"d-flex\">\r\n                  <div\r\n                    style={{\r\n                      textAlign: \"right\",\r\n                    }}\r\n                  >\r\n                    {capitaliseFirstLetter(opt.data.tag.toLowerCase(), 0)}\r\n                  </div>\r\n                  <div className=\"mx-3\">|</div>\r\n                  <div>{opt.data.narration}</div>\r\n                </div>\r\n              </Dropdown.Item>\r\n            );\r\n          })}\r\n      </Dropdown.Menu>\r\n    </Dropdown>\r\n  );\r\n};\r\n\r\nexport default SearchableDropdown;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport { FloatingLabel, Spinner } from \"react-bootstrap\";\r\nimport { getCategoriesUrl } from \"../utils/static\";\r\nimport axios from \"axios\";\r\n\r\nconst ManageBillersModal = ({\r\n  show,\r\n  handle_close,\r\n  handle_submit,\r\n  is_submitting,\r\n  handle_input_change,\r\n  values,\r\n}) => {\r\n  const [categories, setCategories] = useState(Object.assign([]));\r\n\r\n  useEffect(() => {\r\n    const res = getCategories();\r\n    res.then((value) => {\r\n      if (value && value.length > 0) {\r\n        setCategories(value);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n\r\n  const getCategories = async () => {\r\n    let resData = {};\r\n    try {\r\n      const { data } = await axios.get(getCategoriesUrl, {});\r\n      return data;\r\n    } catch (err) {\r\n      console.log(\"ERROR OCURRED\");\r\n    }\r\n    return resData;\r\n  };\r\n\r\n  return (\r\n    <Modal show={show} onHide={handle_close} backdrop=\"static\" keyboard={false}>\r\n      <Modal.Header closeButton>\r\n        <Modal.Title>Create biller</Modal.Title>\r\n      </Modal.Header>\r\n      <Modal.Body>\r\n        <Form>\r\n          <>\r\n            <FloatingLabel controlId=\"billerName\" label=\"Name\" className=\"mb-3\">\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"billerName\"\r\n                onChange={handle_input_change}\r\n              />\r\n            </FloatingLabel>\r\n            <FloatingLabel\r\n              controlId=\"categoryId\"\r\n              label=\"Category\"\r\n              className=\"mb-3\"\r\n            >\r\n              <Form.Select\r\n                aria-label=\"categoryId\"\r\n                onChange={handle_input_change}\r\n              >\r\n                <option>-- Choose option --</option>\r\n                {categories &&\r\n                  categories.map((val, index) => {\r\n                    return (\r\n                      <option key={index} value={val.name}>\r\n                        {val.name}\r\n                      </option>\r\n                    );\r\n                  })}\r\n              </Form.Select>\r\n            </FloatingLabel>\r\n          </>\r\n        </Form>\r\n      </Modal.Body>\r\n      <Modal.Footer>\r\n        <Button variant=\"primary\" onClick={handle_close}>\r\n          Close\r\n        </Button>\r\n        {is_submitting ? (\r\n          <Spinner animation=\"border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n        ) : (\r\n          <Button\r\n            variant=\"secondary\"\r\n            onClick={() => {\r\n              handle_submit(values);\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n        )}\r\n      </Modal.Footer>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ManageBillersModal;\r\n","import React, { useState } from \"react\";\nimport \"./assets/css/starter.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport PaymentModal from \"./modals/payment-modal\";\nimport axios from \"axios\";\nimport { doCreateBillerUrl, doCreateTnxUrl } from \"./utils/static\";\nimport SearchableDropdown from \"./components/searchable-dropdown\";\nimport { nameEnqUrl } from \"./utils/static\";\nimport ManageBillersModal from \"./modals/manage-billers-modal\";\n\nfunction App() {\n  const [show, setShow] = useState(false);\n  const [showBillerModal, setShowBillerModal] = useState(false);\n  const [isSubmitting, setSubmitting] = useState(false);\n  const [paymentDetails, setPaymentDetails] = useState(Object.assign({}));\n  const [billerDetails, setBillerDetails] = useState(Object.assign({}));\n\n  const handleClose = () => {\n    setShow(!show);\n  };\n\n  const handleBillerModalClose = () => {\n    setShowBillerModal(!showBillerModal);\n  };\n\n  const handleSubmit = async (values) => {\n    setSubmitting(true);\n    try {\n      setSubmitting(false);\n      let nowNow = new Date();\n      let requestData = Object.assign(\n        {},\n        { tag: \"TRANSACTIONS\" },\n        {\n          data: Object.assign({}, paymentDetails, {\n            transactionDate: nowNow.toISOString(),\n            transactionId: nowNow.getTime(),\n          }),\n        }\n      );\n      const { data } = await axios.post(doCreateTnxUrl, [requestData]);\n\n      if (data && data.length > 0) {\n        alert(\"Successful\");\n        setShow(false);\n        setPaymentDetails({});\n      }\n    } catch (err) {\n      alert(\"Failed\");\n      console.log(\"ERROR OCCURRED:::\", err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleManageBillerSubmit = async (values) => {\n    setSubmitting(true);\n    try {\n      setSubmitting(false);\n      let nowNow = new Date();\n      let requestData = Object.assign(\n        {},\n        { tag: \"BILLERS\" },\n        Object.assign({}, billerDetails, {\n          transactionDate: nowNow.toISOString(),\n          transactionId: nowNow.getTime(),\n        })\n      );\n      const { data } = await axios.post(doCreateBillerUrl, [requestData]);\n\n      if (data && data.length > 0) {\n        alert(\"Successful\");\n        setShowBillerModal(false);\n        setBillerDetails({});\n      }\n    } catch (err) {\n      alert(\"Failed\");\n      console.log(\"ERROR OCCURRED:::\", err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  const handleInputChange = (e) => {\n    setPaymentDetails({ ...paymentDetails, [e.target.id]: e.target.value });\n  };\n\n  const handleBillerInputChange = (e) => {\n    setBillerDetails({ ...billerDetails, [e.target.id]: e.target.value });\n  };\n\n  const getBeneficiaryName = async (e) => {\n    handleInputChange(e);\n    if (e.target.value.length === 10) {\n      try {\n        const { data } = await axios.get(nameEnqUrl.concat(e.target.value), {});\n\n        setPaymentDetails({\n          ...paymentDetails,\n          beneficiaryName: data.accountName,\n        });\n      } catch (err) {\n        console.log(\"ERROR OCURRED\", err);\n      }\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <PaymentModal\n        show={show}\n        handle_close={handleClose}\n        handle_submit={handleSubmit}\n        is_submitting={isSubmitting}\n        handle_input_change={handleInputChange}\n        get_ben_name={getBeneficiaryName}\n        values={paymentDetails}\n      />\n      <ManageBillersModal\n        show={showBillerModal}\n        handle_close={handleBillerModalClose}\n        handle_submit={handleManageBillerSubmit}\n        is_submitting={isSubmitting}\n        handle_input_change={handleBillerInputChange}\n        values={billerDetails}\n      />\n      <div className=\"py-5 my-5 text-center\">\n        <h1 className=\"display-5 fw-bold\">VStore</h1>\n        <div className=\"col-lg-6 mx-auto\">\n          <p className=\"lead mb-2\">transactions, bills and many more</p>\n          <div className=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n            <div className=\"row searchbar-div\">\n              <div className=\"col-sm-12\">\n                <SearchableDropdown />\n              </div>\n            </div>\n          </div>\n          <div className=\"d-grid gap-2 d-sm-flex justify-content-sm-center\">\n            <div className=\"row\">\n              <div className=\"col-sm-12\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-secondary btn-lg px-4 mr-3 w-50 h-75 mb-20\"\n                  onClick={() => {\n                    setShow(true);\n                  }}\n                >\n                  Fund transfer\n                </button>\n              </div>\n              {/* <div className=\"col-sm-12 \">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-lg px-4 mr-3 w-50 h-75 mb-20\"\n                  onClick={() => {\n                    setShow(true);\n                  }}\n                >\n                  Buy airtime\n                </button>\n              </div>\n              <div className=\"col-sm-12\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-lg px-4 mr-3 w-50 h-75 mb-20\"\n                  onClick={() => {\n                    setShow(true);\n                  }}\n                >\n                  Pay bills\n                </button>\n              </div> */}\n              <div className=\"col-sm-12\">\n                <button\n                  type=\"button\"\n                  className=\"btn btn-outline-secondary btn-lg px-4 mr-3 w-50 h-75 mb-20\"\n                  onClick={() => {\n                    setShowBillerModal(true);\n                  }}\n                >\n                  Manage billers\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}